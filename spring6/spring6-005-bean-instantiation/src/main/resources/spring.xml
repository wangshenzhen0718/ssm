<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--实例化对象第一种方式默认情况下，会调用Bean的无参数构造方法。-->
    <bean class="com.wang.spring6.bean.SpringBean" id="springBean"></bean>

    <!--实例化对象第二种方式,通过简单工厂模式实例化 factory-method属性指定创建该Bean的方法 静态方法 不需要创建StarFactory对象-->
    <bean class="com.wang.spring6.bean.StarFactory" id="starFactory" factory-method="get"></bean>


    <!--实例化对象第三种方式,通过工厂方法模式进行实例化。通过factory-bean和factory-method属性共同完成-->
    <bean class="com.wang.spring6.bean.GunFactory" id="gunFactory"></bean>
    <!--以下的配置很关键，factory-bean属性告诉Spring i调用哪个对象。factory-method告诉Spring调用该对象的哪个方法。-->
    <bean factory-bean="gunFactory" factory-method="get" id="gun"></bean>


    <!--实例化对象第四种方式:通过FactoryBean接口来实现。-->
    <!--这种方式实际上就是第三种方式的简化。-->
    <!--由于你编写的类实现了FactoryBean接口，所以这个类是一个特殊的类，不需要你再手动指定: factory-bean、factory-method-->
    <!--通过一个特殊的Bean: 工厂Bean。来返回一个普通的Bean Person对象。-->
    <!--通过FactoryBean这个工厂Bean主要是想对普通Bean进行加工处理。-->
    <bean id="person" class="com.wang.spring6.bean.PersonFactoryBean"></bean>

</beans>